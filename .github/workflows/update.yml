name: Proxy Pool Update

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  workflow_dispatch:       # 支持手动触发

jobs:
  update-proxies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests PyYAML
          
      - name: Fetch proxies
        run: python scripts/fetch.py
        
      - name: Validate proxies
        id: validation
        run: python scripts/validate.py
        continue-on-error: true  # 即使没有有效代理也继续
        
      - name: Generate commit message
        id: commit-message
        run: |
          {
            echo 'COMMIT_MESSAGE<<EOF'
            cat commit_message.txt 
            echo EOF
          } >> $GITHUB_ENV

          
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@users.noreply.github.com'
          git add data/valid_ips.txt
          
          # 检查是否有更改（避免空提交）
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # 使用格式化的提交消息
          git commit -m "${{ env.COMMIT_MESSAGE }}"
          
          # 使用 GITHUB_TOKEN 进行认证
          git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
          
      - name: Send notification on failure
        if: ${{ failure() || steps.validation.outcome == 'failure' }}
        uses: actions/github-script@v6
        with:
          script: |
            const repo = context.repo;
            # 修复通知逻辑：判断是否有issue编号
            if (context.issue.number) {
              await github.issues.createComment({
                ...repo,
                issue_number: context.issue.number,
                body: '⚠️ Proxy update failed! Check the Action logs.'
              });
            } else {
              await github.issues.create({
                ...repo,
                title: 'Proxy Update Failed',
                body: '⚠️ The scheduled proxy update failed. Check the Action logs for details.'
              });
            }
